We do not se update-alternatives for plymouth theme
After a theme change initrd regeneration is needed
so that' why dracut is called

diff -up plymouth-kcm-5.24.4/src/helper.cpp.1~ plymouth-kcm-5.24.4/src/helper.cpp
--- plymouth-kcm-5.24.4/src/helper.cpp.1~	2022-03-29 13:38:15.000000000 +0200
+++ plymouth-kcm-5.24.4/src/helper.cpp	2022-04-26 01:14:48.242704142 +0200
@@ -88,75 +88,12 @@ ActionReply PlymouthHelper::save(const Q
     QFile configFile(QStringLiteral(PLYMOUTH_CONFIG_PATH));
     configFile.setPermissions(QFileDevice::ReadOwner | QFileDevice::WriteOwner | QFileDevice::ReadGroup | QFileDevice::ReadOther);
 
-    // Special case: Ubuntu derivatives, which work different from everybody else
-    if (hasUpdateAlternatives()) {
-        // find the .plymouth file in the theme
-        QDir dir(QStringLiteral(PLYMOUTH_THEMES_DIR) + theme);
-        const QStringList themeFile = dir.entryList(QStringList() << QStringLiteral("*.plymouth"));
-        if (themeFile.count() != 1) {
-            reply = ActionReply::BackendError;
-            reply.setErrorDescription(i18n("Theme corrupted: .plymouth file not found inside theme."));
-            return reply;
-        }
-
-        QProcess checkProcess;
-        QByteArray data;
-        qDebug() << "Running update-alternatives --list default.plymouth now";
-        checkProcess.start(updateAlternatives(), {QStringLiteral("--list"), QStringLiteral("default.plymouth")});
-        if (!checkProcess.waitForStarted()) {
-            reply = ActionReply::BackendError;
-            reply.setErrorDescription(i18n("Cannot start update-alternatives."));
-            return reply;
-        }
-        if (!checkProcess.waitForFinished()) {
-            reply = ActionReply::BackendError;
-            reply.setErrorDescription(i18n("update-alternatives failed to run."));
-            return reply;
-        }
-        data = checkProcess.readAllStandardOutput();
-
-        if (int ret = checkProcess.exitCode(); ret != 0) {
-            reply = ActionReply(ActionReply::HelperErrorReply());
-            reply.setErrorCode(static_cast<ActionReply::Error>(ret));
-            reply.setErrorDescription(i18n("update-alternatives returned with error condition %1.", ret));
-            return reply;
-        }
-        const QString installFile = dir.path() + QLatin1Char('/') + themeFile.first();
-        if (!data.contains(installFile.toUtf8())) {
-            qDebug() << "Plymouth file not found in update-alternatives. So install it";
-            if (auto reply = updateAlternativesInstall(installFile); reply.failed()) {
-                return reply;
-            }
-        } else {
-            qDebug() << "Running update-alternatives --set  now";
-            QProcess process;
-            process.start(QStringLiteral("update-alternatives"), QStringList() << QStringLiteral("--set") << QStringLiteral("default.plymouth") << installFile);
-            if (!process.waitForStarted()) {
-                reply = ActionReply::BackendError;
-                reply.setErrorDescription(i18n("Cannot start update-alternatives."));
-                return reply;
-            }
-            if (!process.waitForFinished()) {
-                reply = ActionReply::BackendError;
-                reply.setErrorDescription(i18n("update-alternatives failed to run."));
-                return reply;
-            }
-
-            if (int ret = process.exitCode(); ret != 0) {
-                reply = ActionReply(ActionReply::HelperErrorReply());
-                reply.setErrorCode(static_cast<ActionReply::Error>(ret));
-                reply.setErrorDescription(i18n("update-alternatives returned with error condition %1.", ret));
-                return reply;
-            }
-        }
-    }
-
     QProcess process;
-    qDebug() << "Running update-initramfs -u  now";
-    process.start(QStringLiteral("/usr/sbin/update-initramfs"), QStringList() << QStringLiteral("-u"));
+    qDebug() << "Running dracut --force now";
+    process.start(QStringLiteral("/usr/sbin/dracut"), QStringList() << QStringLiteral("--force"));
     if (!process.waitForStarted()) {
         reply = ActionReply::BackendError;
-        reply.setErrorDescription(i18n("Cannot start initramfs."));
+        reply.setErrorDescription(i18n("Cannot start dracut."));
         return reply;
     }
     // We don't know how long this will take. The helper will need to generate N=installed_kernels initrds.
@@ -164,7 +101,7 @@ ActionReply PlymouthHelper::save(const Q
     // NB: there is also a timeout in the KCM
     if (!process.waitForFinished(std::chrono::milliseconds(15min).count())) {
         reply = ActionReply::BackendError;
-        reply.setErrorDescription(i18n("Initramfs failed to run."));
+        reply.setErrorDescription(i18n("Dracut failed to run."));
         return reply;
     }
 
@@ -174,7 +111,7 @@ ActionReply PlymouthHelper::save(const Q
     }
     reply = ActionReply(ActionReply::HelperErrorReply());
     reply.setErrorCode(static_cast<ActionReply::Error>(ret));
-    reply.setErrorDescription(i18n("Initramfs returned with error condition %1.", ret));
+    reply.setErrorDescription(i18n("Dracut returned with error condition %1.", ret));
     return reply;
 }
 
@@ -247,22 +184,6 @@ ActionReply PlymouthHelper::install(cons
 
     archive->close();
 
-    // Special case: Ubuntu derivatives, which work different from everybody else
-    if (hasUpdateAlternatives()) {
-        // find the .plymouth file in the theme
-        QDir dir(themePath);
-        const QStringList themeFile = dir.entryList({QStringLiteral("*.plymouth")});
-        if (themeFile.count() != 1) {
-            reply = ActionReply::BackendError;
-            reply.setErrorDescription(i18n("Theme corrupted: .plymouth file not found inside theme."));
-            return reply;
-        }
-
-        if (auto reply = updateAlternativesInstall(themePath + QLatin1Char('/') + themeFile.first()); reply.failed()) {
-            return reply;
-        }
-    }
-
     QVariantMap map;
     map[QStringLiteral("plugin")] = themeName;
     map[QStringLiteral("path")] = themePath;
@@ -294,40 +215,6 @@ ActionReply PlymouthHelper::uninstall(co
         return reply;
     }
 
-    // Special case: Ubuntu derivatives, which work different from everybody else
-    if (hasUpdateAlternatives()) {
-        // find the .plymouth file in the theme
-        const QStringList themeFile = dir.entryList(QStringList() << QStringLiteral("*.plymouth"));
-        if (themeFile.count() != 1) {
-            reply = ActionReply::BackendError;
-            reply.setErrorDescription(i18n("Theme corrupted: .plymouth file not found inside theme."));
-            return reply;
-        }
-        int ret = 0;
-        QProcess process;
-
-        process.start(QStringLiteral("update-alternatives"),
-                      {QStringLiteral("--remove"), QStringLiteral("default.plymouth"), dir.path() + QLatin1Char('/') + themeFile.first()});
-        if (!process.waitForStarted()) {
-            reply = ActionReply::BackendError;
-            reply.setErrorDescription(i18n("Cannot start update-alternatives."));
-            return reply;
-        }
-        if (!process.waitForFinished()) {
-            reply = ActionReply::BackendError;
-            reply.setErrorDescription(i18n("update-alternatives failed to run."));
-            return reply;
-        }
-        ret = process.exitCode();
-
-        if (ret != 0) {
-            reply = ActionReply(ActionReply::HelperErrorReply());
-            reply.setErrorCode(static_cast<ActionReply::Error>(ret));
-            reply.setErrorDescription(i18n("update-alternatives returned with error condition %1.", ret));
-            return reply;
-        }
-    }
-
     if (dir.removeRecursively()) {
         return ActionReply::SuccessReply();
     }
